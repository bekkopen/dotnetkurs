{"name":".NET introduksjonskurs","tagline":"Bootcamp 2015","body":"# Del 1 - .NET & C# \r\n\r\n## Oppgave 1 – Hello World\r\nDen første oppgaven er temmelig enkel:\r\nLag en \"Hello World\"-applikasjon.\r\n\r\n## Oppgave 2 – Personer\r\nVår applikasjon vil omhandle personer. Disse personene har egenskaper som navn, alder, hårfarge, høyde og kjønn. Disse egenskapene skal registreres. En persons alder kan ikke være mindre enn 0. \r\nLag en klasse med properties som reflekterer dette. Du kan gjerne overskrive ToString-metoden. Den vil bli brukt i en senere oppgave.\r\n\r\n## Oppgave 3 – Log\r\nKunden vår ønsker å ha mulighet til å logge hendelser.\r\nLag en metode på person-klassen som logger utsagn til konsollet (Console.WriteLine()). Metoden skal logge ett eller flere utsagn om gangen. Hvert utsagn skal prefikses med personens navn.  (Bonuspoeng til de som klarer å legge til et default utsagn: ”Blah blah blah..” )\r\nEksempellogg:\r\n\r\n    Starter loggen…\r\n\r\n    Kanye: “I feel like I'm too busy writing history to read it.”\r\n\r\n    Kanye: “I don't even listen to rap. My apartment is too nice to listen to rap in.”\r\n\r\n## Oppgave 4 – Enums\r\nKunden vår holder oppsikt med et stort antall personer. Det er ikke alltid alle oppfører seg like fint, og kunden vil ha mulighet til å registrere hvorvidt en person oppfører seg bra eller dårlig. Kunden har dessverre ikke full oversikt, så systemet må også ha mulighet for å registrere at oppførselen er ukjent. Begynn derfor denne oppgaven med å lage en enum som gjenspeiler dette.\r\nOpprett en property på personobjektet som kan lagre en persons oppførsel.\r\n\r\n## Oppgave 5 – Liste av personer\r\nMed vår nye kunnskap ser vi at deler av systemet kan forenkles. Benytt object initializers til å opprette en array med personer. Se forslag til testpersoner under:\r\n\r\nNavn | Alder | Hårfarge | Høyde | Tilbøyelighet | Kjønn\r\n---- | ----- | -------- | ----- | ------------- | ------\r\nPatrick Bateman\t| 27 | Brun | 184cm | Ond | M\r\nMystique | 127 | Rød | 177cm | Ond | K\r\nTwo Face | 58 | Brun | 183cm | Ond | M\r\nCruella De Vil | 65 | Svart og Hvitt | 168cm | Ond | K\r\nOrochimaru | 100 | Svart | 180cm | Ond | M\r\nHarvey Dent | 56 | Brun | 183cm | God | M\r\nKong Harald | 75 | Ukjent | 150cm | God | M\r\n\r\nKunden ønsker å få skrevet ut en liste over alle personene som er registrert i systemet.\r\nIterer igjennom personene i registeret og kall ToString-metoden på hvert personobjekt.\r\n\r\n## Oppgave 6 – Filtrering\r\nNå som dere har bygget litt kompetanse ønsker kunden å få se noen reelle resultater.\r\nPersoner som har svart hår eller er over 100 år gamle er klart mistenkelige. Kunden vil gjerne ha en utskrift over disse personene så snart som mulig.\r\nBruk LINQ til å hente ut en liste over disse personene.\r\n\r\n## Oppgave 7 – Group by\r\nKunden har nok en god dag og er strålende fornøyd. Nå som han har fått gjennomslag for såpass mye ny funksjonalitet så ønsker han å fortsette å utvikle systemet. \r\nKunden ønsker seg en oversikt over personene som er registrert i systemet fordelt etter tilbøyelighet.\r\nTa utgangspunkt i lista fra forrige oppgave og grupper på tilbøyelighet. Skriv ut grupperingene.\r\nEksempel:\r\n\r\n    Eeevil:\r\n        Hans\r\n        Gretchen\r\n    Good:\r\n        Petter Sprett\r\n        Kristoffer Robin\r\n    Dontknow:\r\n        Supermann\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}